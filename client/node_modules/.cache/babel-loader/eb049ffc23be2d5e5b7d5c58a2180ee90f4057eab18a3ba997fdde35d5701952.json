{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\demis\\\\Desktop\\\\gest8\\\\client\\\\src\\\\components\\\\dashboard\\\\OrdiniWidget.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, ListGroup, Badge, Button } from 'react-bootstrap';\nimport { FaArrowRight, FaExternalLinkAlt } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport { getOrdini, updateStatoOrdine } from '../../services/ordiniService';\nimport { format } from 'date-fns';\nimport { it } from 'date-fns/locale';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrdiniWidget = () => {\n  _s();\n  const [ordini, setOrdini] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Carica gli ordini attivi (nuovi, in preparazione, pronti)\n  useEffect(() => {\n    const fetchOrdiniAttivi = async () => {\n      setLoading(true);\n      try {\n        const oggi = new Date().toISOString().split('T')[0];\n        const result = await getOrdini({\n          data: oggi,\n          stato: ['nuovo', 'in preparazione', 'pronto'].join(',')\n        });\n        setOrdini(result.data.slice(0, 5)); // Prendi solo i primi 5 ordini\n        setError(null);\n      } catch (error) {\n        console.error('Errore nel caricamento degli ordini attivi:', error);\n        setError('Impossibile caricare gli ordini attivi.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchOrdiniAttivi();\n\n    // Aggiorna gli ordini ogni minuto\n    const intervalId = setInterval(fetchOrdiniAttivi, 60000);\n    return () => clearInterval(intervalId);\n  }, []);\n\n  // Gestisce l'aggiornamento dello stato di un ordine\n  const handleUpdateStato = async ordine => {\n    const nextStato = {\n      'nuovo': 'in preparazione',\n      'in preparazione': 'pronto',\n      'pronto': 'in consegna',\n      'in consegna': 'consegnato'\n    }[ordine.stato] || null;\n    if (!nextStato) return;\n    try {\n      await updateStatoOrdine(ordine._id, nextStato);\n\n      // Aggiorna la lista degli ordini\n      setOrdini(prevOrdini => prevOrdini.map(o => o._id === ordine._id ? {\n        ...o,\n        stato: nextStato\n      } : o).filter(o => ['nuovo', 'in preparazione', 'pronto'].includes(o.stato)));\n    } catch (error) {\n      console.error('Errore nell\\'aggiornamento dello stato dell\\'ordine:', error);\n      // Qui si potrebbe aggiungere una notifica di errore\n    }\n  };\n\n  // Mappatura degli stati a classi CSS e etichette\n  const statoConfig = {\n    'nuovo': {\n      class: 'bg-primary',\n      label: 'Nuovo'\n    },\n    'in preparazione': {\n      class: 'bg-warning text-dark',\n      label: 'In Preparazione'\n    },\n    'pronto': {\n      class: 'bg-success',\n      label: 'Pronto'\n    },\n    'in consegna': {\n      class: 'bg-info',\n      label: 'In Consegna'\n    },\n    'consegnato': {\n      class: 'bg-secondary',\n      label: 'Consegnato'\n    },\n    'annullato': {\n      class: 'bg-danger',\n      label: 'Annullato'\n    }\n  };\n\n  // Formatta la data\n  const formatTime = date => {\n    return format(new Date(date), 'HH:mm', {\n      locale: it\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"shadow-sm h-100\",\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      className: \"bg-white d-flex justify-content-between align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"mb-0\",\n        children: \"Ordini Attivi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/ordini\",\n        className: \"btn btn-sm btn-outline-primary\",\n        children: [/*#__PURE__*/_jsxDEV(FaExternalLinkAlt, {\n          className: \"me-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), \" Vedi Tutti\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      variant: \"flush\",\n      children: loading ? /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        className: \"text-center py-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-border spinner-border-sm text-primary\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            children: \"Caricamento...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ms-2\",\n          children: \"Caricamento ordini...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        className: \"text-center text-danger py-3\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this) : ordini.length === 0 ? /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        className: \"text-center text-muted py-3\",\n        children: \"Nessun ordine attivo al momento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this) : ordini.map(ordine => {\n        var _statoConfig$ordine$s, _statoConfig$ordine$s2, _ordine$indirizzoCons, _ordine$indirizzoCons2, _statoConfig$nuovo$in;\n        return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          className: \"py-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between align-items-center mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"fw-bold\",\n                children: ordine.numeroOrdine\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                className: `ms-2 ${(_statoConfig$ordine$s = statoConfig[ordine.stato]) === null || _statoConfig$ordine$s === void 0 ? void 0 : _statoConfig$ordine$s.class}`,\n                children: (_statoConfig$ordine$s2 = statoConfig[ordine.stato]) === null || _statoConfig$ordine$s2 === void 0 ? void 0 : _statoConfig$ordine$s2.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-muted\",\n              children: formatTime(ordine.createdAt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"small\",\n                children: ordine.cliente ? `${ordine.cliente.nome} ${ordine.cliente.cognome}` : ordine.nomeCliente\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"small text-muted\",\n                children: ordine.tipo === 'consegna' ? `Consegna: ${(_ordine$indirizzoCons = ordine.indirizzoConsegna) === null || _ordine$indirizzoCons === void 0 ? void 0 : _ordine$indirizzoCons.via} ${(_ordine$indirizzoCons2 = ordine.indirizzoConsegna) === null || _ordine$indirizzoCons2 === void 0 ? void 0 : _ordine$indirizzoCons2.civico}` : ordine.tipo === 'tavolo' ? `Tavolo: ${ordine.numeroTavolo}` : 'Asporto'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-success\",\n              size: \"sm\",\n              onClick: () => handleUpdateStato(ordine),\n              children: [(_statoConfig$nuovo$in = statoConfig[{\n                'nuovo': 'in preparazione',\n                'in preparazione': 'pronto',\n                'pronto': 'in consegna'\n              }[ordine.stato]]) === null || _statoConfig$nuovo$in === void 0 ? void 0 : _statoConfig$nuovo$in.label, \" \", /*#__PURE__*/_jsxDEV(FaArrowRight, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, ordine._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(OrdiniWidget, \"pzRiWO8TBkle/frE7UNWbpdIneA=\");\n_c = OrdiniWidget;\nexport default OrdiniWidget;\nvar _c;\n$RefreshReg$(_c, \"OrdiniWidget\");","map":{"version":3,"names":["React","useState","useEffect","Card","ListGroup","Badge","Button","FaArrowRight","FaExternalLinkAlt","Link","getOrdini","updateStatoOrdine","format","it","jsxDEV","_jsxDEV","OrdiniWidget","_s","ordini","setOrdini","loading","setLoading","error","setError","fetchOrdiniAttivi","oggi","Date","toISOString","split","result","data","stato","join","slice","console","intervalId","setInterval","clearInterval","handleUpdateStato","ordine","nextStato","_id","prevOrdini","map","o","filter","includes","statoConfig","class","label","formatTime","date","locale","className","children","Header","fileName","_jsxFileName","lineNumber","columnNumber","to","variant","Item","role","length","_statoConfig$ordine$s","_statoConfig$ordine$s2","_ordine$indirizzoCons","_ordine$indirizzoCons2","_statoConfig$nuovo$in","numeroOrdine","createdAt","cliente","nome","cognome","nomeCliente","tipo","indirizzoConsegna","via","civico","numeroTavolo","size","onClick","_c","$RefreshReg$"],"sources":["C:/Users/demis/Desktop/gest8/client/src/components/dashboard/OrdiniWidget.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card, ListGroup, Badge, Button } from 'react-bootstrap';\r\nimport { FaArrowRight, FaExternalLinkAlt } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\nimport { getOrdini, updateStatoOrdine } from '../../services/ordiniService';\r\nimport { format } from 'date-fns';\r\nimport { it } from 'date-fns/locale';\r\n\r\nconst OrdiniWidget = () => {\r\n  const [ordini, setOrdini] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Carica gli ordini attivi (nuovi, in preparazione, pronti)\r\n  useEffect(() => {\r\n    const fetchOrdiniAttivi = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const oggi = new Date().toISOString().split('T')[0];\r\n        const result = await getOrdini({\r\n          data: oggi,\r\n          stato: ['nuovo', 'in preparazione', 'pronto'].join(',')\r\n        });\r\n        \r\n        setOrdini(result.data.slice(0, 5)); // Prendi solo i primi 5 ordini\r\n        setError(null);\r\n      } catch (error) {\r\n        console.error('Errore nel caricamento degli ordini attivi:', error);\r\n        setError('Impossibile caricare gli ordini attivi.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchOrdiniAttivi();\r\n    \r\n    // Aggiorna gli ordini ogni minuto\r\n    const intervalId = setInterval(fetchOrdiniAttivi, 60000);\r\n    \r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  // Gestisce l'aggiornamento dello stato di un ordine\r\n  const handleUpdateStato = async (ordine) => {\r\n    const nextStato = {\r\n      'nuovo': 'in preparazione',\r\n      'in preparazione': 'pronto',\r\n      'pronto': 'in consegna',\r\n      'in consegna': 'consegnato'\r\n    }[ordine.stato] || null;\r\n    \r\n    if (!nextStato) return;\r\n    \r\n    try {\r\n      await updateStatoOrdine(ordine._id, nextStato);\r\n      \r\n      // Aggiorna la lista degli ordini\r\n      setOrdini(prevOrdini => \r\n        prevOrdini.map(o => \r\n          o._id === ordine._id ? { ...o, stato: nextStato } : o\r\n        ).filter(o => ['nuovo', 'in preparazione', 'pronto'].includes(o.stato))\r\n      );\r\n    } catch (error) {\r\n      console.error('Errore nell\\'aggiornamento dello stato dell\\'ordine:', error);\r\n      // Qui si potrebbe aggiungere una notifica di errore\r\n    }\r\n  };\r\n\r\n  // Mappatura degli stati a classi CSS e etichette\r\n  const statoConfig = {\r\n    'nuovo': { class: 'bg-primary', label: 'Nuovo' },\r\n    'in preparazione': { class: 'bg-warning text-dark', label: 'In Preparazione' },\r\n    'pronto': { class: 'bg-success', label: 'Pronto' },\r\n    'in consegna': { class: 'bg-info', label: 'In Consegna' },\r\n    'consegnato': { class: 'bg-secondary', label: 'Consegnato' },\r\n    'annullato': { class: 'bg-danger', label: 'Annullato' }\r\n  };\r\n\r\n  // Formatta la data\r\n  const formatTime = (date) => {\r\n    return format(new Date(date), 'HH:mm', { locale: it });\r\n  };\r\n\r\n  return (\r\n    <Card className=\"shadow-sm h-100\">\r\n      <Card.Header className=\"bg-white d-flex justify-content-between align-items-center\">\r\n        <h5 className=\"mb-0\">Ordini Attivi</h5>\r\n        <Link to=\"/ordini\" className=\"btn btn-sm btn-outline-primary\">\r\n          <FaExternalLinkAlt className=\"me-1\" /> Vedi Tutti\r\n        </Link>\r\n      </Card.Header>\r\n      <ListGroup variant=\"flush\">\r\n        {loading ? (\r\n          <ListGroup.Item className=\"text-center py-3\">\r\n            <div className=\"spinner-border spinner-border-sm text-primary\" role=\"status\">\r\n              <span className=\"visually-hidden\">Caricamento...</span>\r\n            </div>\r\n            <span className=\"ms-2\">Caricamento ordini...</span>\r\n          </ListGroup.Item>\r\n        ) : error ? (\r\n          <ListGroup.Item className=\"text-center text-danger py-3\">\r\n            {error}\r\n          </ListGroup.Item>\r\n        ) : ordini.length === 0 ? (\r\n          <ListGroup.Item className=\"text-center text-muted py-3\">\r\n            Nessun ordine attivo al momento\r\n          </ListGroup.Item>\r\n        ) : (\r\n          ordini.map((ordine) => (\r\n            <ListGroup.Item key={ordine._id} className=\"py-3\">\r\n              <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n                <div>\r\n                  <span className=\"fw-bold\">{ordine.numeroOrdine}</span>\r\n                  <Badge className={`ms-2 ${statoConfig[ordine.stato]?.class}`}>\r\n                    {statoConfig[ordine.stato]?.label}\r\n                  </Badge>\r\n                </div>\r\n                <small className=\"text-muted\">\r\n                  {formatTime(ordine.createdAt)}\r\n                </small>\r\n              </div>\r\n              <div className=\"d-flex justify-content-between align-items-center\">\r\n                <div>\r\n                  <div className=\"small\">\r\n                    {ordine.cliente ? `${ordine.cliente.nome} ${ordine.cliente.cognome}` : ordine.nomeCliente}\r\n                  </div>\r\n                  <div className=\"small text-muted\">\r\n                    {ordine.tipo === 'consegna' \r\n                      ? `Consegna: ${ordine.indirizzoConsegna?.via} ${ordine.indirizzoConsegna?.civico}` \r\n                      : ordine.tipo === 'tavolo' \r\n                        ? `Tavolo: ${ordine.numeroTavolo}` \r\n                        : 'Asporto'}\r\n                  </div>\r\n                </div>\r\n                <Button\r\n                  variant=\"outline-success\"\r\n                  size=\"sm\"\r\n                  onClick={() => handleUpdateStato(ordine)}\r\n                >\r\n                  {statoConfig[\r\n                    {\r\n                      'nuovo': 'in preparazione',\r\n                      'in preparazione': 'pronto',\r\n                      'pronto': 'in consegna'\r\n                    }[ordine.stato]\r\n                  ]?.label} <FaArrowRight />\r\n                </Button>\r\n              </div>\r\n            </ListGroup.Item>\r\n          ))\r\n        )}\r\n      </ListGroup>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default OrdiniWidget;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}