{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/clienti';\n\n// Ottieni tutti i clienti\nexport const getClienti = async () => {\n  try {\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    console.error('Errore nel recupero dei clienti:', error);\n    throw error;\n  }\n};\n\n// Ottieni un cliente specifico\nexport const getCliente = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Errore nel recupero del cliente ${id}:`, error);\n    throw error;\n  }\n};\n\n// Crea un nuovo cliente\nexport const createCliente = async clienteData => {\n  try {\n    const response = await axios.post(API_URL, clienteData);\n    return response.data;\n  } catch (error) {\n    console.error('Errore nella creazione del cliente:', error);\n    throw error;\n  }\n};\n\n// Aggiorna un cliente\nexport const updateCliente = async (id, clienteData) => {\n  try {\n    const response = await axios.put(`${API_URL}/${id}`, clienteData);\n    return response.data;\n  } catch (error) {\n    console.error(`Errore nell'aggiornamento del cliente ${id}:`, error);\n    throw error;\n  }\n};\n\n// Elimina un cliente\nexport const deleteCliente = async id => {\n  try {\n    const response = await axios.delete(`${API_URL}/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Errore nell'eliminazione del cliente ${id}:`, error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","getClienti","response","get","data","error","console","getCliente","id","createCliente","clienteData","post","updateCliente","put","deleteCliente","delete"],"sources":["C:/Users/demis/Desktop/gest8/client/src/services/clientiService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/clienti';\r\n\r\n// Ottieni tutti i clienti\r\nexport const getClienti = async () => {\r\n  try {\r\n    const response = await axios.get(API_URL);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Errore nel recupero dei clienti:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Ottieni un cliente specifico\r\nexport const getCliente = async (id) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Errore nel recupero del cliente ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Crea un nuovo cliente\r\nexport const createCliente = async (clienteData) => {\r\n  try {\r\n    const response = await axios.post(API_URL, clienteData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Errore nella creazione del cliente:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Aggiorna un cliente\r\nexport const updateCliente = async (id, clienteData) => {\r\n  try {\r\n    const response = await axios.put(`${API_URL}/${id}`, clienteData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Errore nell'aggiornamento del cliente ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Elimina un cliente\r\nexport const deleteCliente = async (id) => {\r\n  try {\r\n    const response = await axios.delete(`${API_URL}/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Errore nell'eliminazione del cliente ${id}:`, error);\r\n    throw error;\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,mCAAmC;;AAEnD;AACA,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACH,OAAO,CAAC;IACzC,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,UAAU,GAAG,MAAOC,EAAE,IAAK;EACtC,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,IAAIQ,EAAE,EAAE,CAAC;IACpD,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mCAAmCG,EAAE,GAAG,EAAEH,KAAK,CAAC;IAC9D,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,aAAa,GAAG,MAAOC,WAAW,IAAK;EAClD,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMH,KAAK,CAACY,IAAI,CAACX,OAAO,EAAEU,WAAW,CAAC;IACvD,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;IAC3D,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMO,aAAa,GAAG,MAAAA,CAAOJ,EAAE,EAAEE,WAAW,KAAK;EACtD,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMH,KAAK,CAACc,GAAG,CAAC,GAAGb,OAAO,IAAIQ,EAAE,EAAE,EAAEE,WAAW,CAAC;IACjE,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yCAAyCG,EAAE,GAAG,EAAEH,KAAK,CAAC;IACpE,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMS,aAAa,GAAG,MAAON,EAAE,IAAK;EACzC,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACgB,MAAM,CAAC,GAAGf,OAAO,IAAIQ,EAAE,EAAE,CAAC;IACvD,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wCAAwCG,EAAE,GAAG,EAAEH,KAAK,CAAC;IACnE,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}