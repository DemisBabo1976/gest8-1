{"ast":null,"code":"// services/clientiService.js\nimport axios from 'axios';\nconst API_URL = '/api/clienti';\nexport const getClienti = async () => {\n  try {\n    const response = await axios.get(API_URL);\n    console.log('Risposta del server:', response.data); // Aggiungi log di debug\n    return response.data.data || response.data; // Gestisce entrambi i formati di risposta\n  } catch (error) {\n    console.error('Errore nel recupero dei clienti:', error);\n    throw error;\n  }\n};\n\n// Cerca clienti per query\nexport const cercaClienti = async query => {\n  try {\n    const response = await axios.get(`${API_URL}/search?q=${query}`);\n    return response.data;\n  } catch (error) {\n    console.error('Errore nella ricerca dei clienti:', error);\n    throw error;\n  }\n};\n\n// Ottieni un cliente specifico\nexport const getCliente = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Errore nel recupero del cliente ${id}:`, error);\n    throw error;\n  }\n};\n\n// Crea un nuovo cliente\nexport const createCliente = async cliente => {\n  try {\n    const response = await axios.post(API_URL, cliente);\n    return response.data;\n  } catch (error) {\n    console.error('Errore nella creazione del cliente:', error);\n    throw error;\n  }\n};\n\n// Aggiorna un cliente\nexport const updateCliente = async (id, cliente) => {\n  try {\n    const response = await axios.put(`${API_URL}/${id}`, cliente);\n    return response.data;\n  } catch (error) {\n    console.error(`Errore nell'aggiornamento del cliente ${id}:`, error);\n    throw error;\n  }\n};\n\n// Elimina un cliente\nexport const deleteCliente = async id => {\n  try {\n    const response = await axios.delete(`${API_URL}/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Errore nell'eliminazione del cliente ${id}:`, error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","getClienti","response","get","console","log","data","error","cercaClienti","query","getCliente","id","createCliente","cliente","post","updateCliente","put","deleteCliente","delete"],"sources":["C:/Users/demis/Desktop/gest8/client/src/services/clientiService.js"],"sourcesContent":["// services/clientiService.js\r\nimport axios from 'axios';\r\n\r\nconst API_URL = '/api/clienti';\r\n\r\nexport const getClienti = async () => {\r\n  try {\r\n    const response = await axios.get(API_URL);\r\n    console.log('Risposta del server:', response.data); // Aggiungi log di debug\r\n    return response.data.data || response.data; // Gestisce entrambi i formati di risposta\r\n  } catch (error) {\r\n    console.error('Errore nel recupero dei clienti:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Cerca clienti per query\r\nexport const cercaClienti = async (query) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/search?q=${query}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Errore nella ricerca dei clienti:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Ottieni un cliente specifico\r\nexport const getCliente = async (id) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Errore nel recupero del cliente ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Crea un nuovo cliente\r\nexport const createCliente = async (cliente) => {\r\n  try {\r\n    const response = await axios.post(API_URL, cliente);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Errore nella creazione del cliente:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Aggiorna un cliente\r\nexport const updateCliente = async (id, cliente) => {\r\n  try {\r\n    const response = await axios.put(`${API_URL}/${id}`, cliente);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Errore nell'aggiornamento del cliente ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Elimina un cliente\r\nexport const deleteCliente = async (id) => {\r\n  try {\r\n    const response = await axios.delete(`${API_URL}/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Errore nell'eliminazione del cliente ${id}:`, error);\r\n    throw error;\r\n  }\r\n};"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,cAAc;AAE9B,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACH,OAAO,CAAC;IACzCI,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;IACpD,OAAOJ,QAAQ,CAACI,IAAI,CAACA,IAAI,IAAIJ,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9C,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAG,MAAOC,KAAK,IAAK;EAC3C,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,aAAaS,KAAK,EAAE,CAAC;IAChE,OAAOP,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IACzD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,UAAU,GAAG,MAAOC,EAAE,IAAK;EACtC,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,IAAIW,EAAE,EAAE,CAAC;IACpD,OAAOT,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,mCAAmCI,EAAE,GAAG,EAAEJ,KAAK,CAAC;IAC9D,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMK,aAAa,GAAG,MAAOC,OAAO,IAAK;EAC9C,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAMH,KAAK,CAACe,IAAI,CAACd,OAAO,EAAEa,OAAO,CAAC;IACnD,OAAOX,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;IAC3D,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMQ,aAAa,GAAG,MAAAA,CAAOJ,EAAE,EAAEE,OAAO,KAAK;EAClD,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAMH,KAAK,CAACiB,GAAG,CAAC,GAAGhB,OAAO,IAAIW,EAAE,EAAE,EAAEE,OAAO,CAAC;IAC7D,OAAOX,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,yCAAyCI,EAAE,GAAG,EAAEJ,KAAK,CAAC;IACpE,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMU,aAAa,GAAG,MAAON,EAAE,IAAK;EACzC,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMH,KAAK,CAACmB,MAAM,CAAC,GAAGlB,OAAO,IAAIW,EAAE,EAAE,CAAC;IACvD,OAAOT,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,wCAAwCI,EAAE,GAAG,EAAEJ,KAAK,CAAC;IACnE,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}