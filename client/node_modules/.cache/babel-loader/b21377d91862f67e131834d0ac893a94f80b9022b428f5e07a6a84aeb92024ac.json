{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\n\n// Ottiene tutti gli ordini\nexport const getOrdini = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/ordini`);\n    return response.data;\n  } catch (error) {\n    console.error('Errore nel recupero degli ordini:', error);\n    throw error;\n  }\n};\n\n// Ottiene un ordine specifico\nexport const getOrdine = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/ordini/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Errore nel recupero dell'ordine con ID ${id}:`, error);\n    throw error;\n  }\n};\n\n// Crea un nuovo ordine\nexport const createOrdine = async ordine => {\n  try {\n    const response = await axios.post(`${API_URL}/ordini`, ordine);\n    return response.data;\n  } catch (error) {\n    console.error('Errore nella creazione dell\\'ordine:', error);\n    throw error;\n  }\n};\n\n// Aggiorna un ordine esistente\nexport const updateOrdine = async (id, ordine) => {\n  try {\n    const response = await axios.put(`${API_URL}/ordini/${id}`, ordine);\n    return response.data;\n  } catch (error) {\n    console.error(`Errore nell'aggiornamento dell'ordine con ID ${id}:`, error);\n    throw error;\n  }\n};\n\n// Elimina un ordine\nexport const deleteOrdine = async id => {\n  try {\n    const response = await axios.delete(`${API_URL}/ordini/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Errore nell'eliminazione dell'ordine con ID ${id}:`, error);\n    throw error;\n  }\n};\n\n// Aggiorna solo lo stato di un ordine\nexport const updateStatoOrdine = async (id, nuovoStato) => {\n  try {\n    const response = await axios.patch(`${API_URL}/ordini/${id}/stato`, {\n      stato: nuovoStato\n    });\n    return response.data;\n  } catch (error) {\n    console.error(`Errore nell'aggiornamento dello stato dell'ordine con ID ${id}:`, error);\n    throw error;\n  }\n};\n\n// Ottiene statistiche sugli ordini\nexport const getStatisticheOrdini = async filtri => {\n  try {\n    const response = await axios.get(`${API_URL}/ordini/statistiche`, {\n      params: filtri\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Errore nel recupero delle statistiche degli ordini:', error);\n    throw error;\n  }\n};\nexport default {\n  getOrdini,\n  getOrdine,\n  createOrdine,\n  updateOrdine,\n  deleteOrdine,\n  updateStatoOrdine,\n  getStatisticheOrdini\n};","map":{"version":3,"names":["axios","API_URL","getOrdini","response","get","data","error","console","getOrdine","id","createOrdine","ordine","post","updateOrdine","put","deleteOrdine","delete","updateStatoOrdine","nuovoStato","patch","stato","getStatisticheOrdini","filtri","params"],"sources":["C:/Users/demis/Desktop/gest8/client/src/services/ordiniService1.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\n// Ottiene tutti gli ordini\r\nexport const getOrdini = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/ordini`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Errore nel recupero degli ordini:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Ottiene un ordine specifico\r\nexport const getOrdine = async (id) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/ordini/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Errore nel recupero dell'ordine con ID ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Crea un nuovo ordine\r\nexport const createOrdine = async (ordine) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/ordini`, ordine);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Errore nella creazione dell\\'ordine:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Aggiorna un ordine esistente\r\nexport const updateOrdine = async (id, ordine) => {\r\n  try {\r\n    const response = await axios.put(`${API_URL}/ordini/${id}`, ordine);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Errore nell'aggiornamento dell'ordine con ID ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Elimina un ordine\r\nexport const deleteOrdine = async (id) => {\r\n  try {\r\n    const response = await axios.delete(`${API_URL}/ordini/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Errore nell'eliminazione dell'ordine con ID ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Aggiorna solo lo stato di un ordine\r\nexport const updateStatoOrdine = async (id, nuovoStato) => {\r\n  try {\r\n    const response = await axios.patch(`${API_URL}/ordini/${id}/stato`, { stato: nuovoStato });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Errore nell'aggiornamento dello stato dell'ordine con ID ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Ottiene statistiche sugli ordini\r\nexport const getStatisticheOrdini = async (filtri) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/ordini/statistiche`, { params: filtri });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Errore nel recupero delle statistiche degli ordini:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default {\r\n  getOrdini,\r\n  getOrdine,\r\n  createOrdine,\r\n  updateOrdine,\r\n  deleteOrdine,\r\n  updateStatoOrdine,\r\n  getStatisticheOrdini\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;;AAE3C;AACA,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;EACnC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,SAAS,CAAC;IACrD,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IACzD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,SAAS,GAAG,MAAOC,EAAE,IAAK;EACrC,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,WAAWQ,EAAE,EAAE,CAAC;IAC3D,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0CAA0CG,EAAE,GAAG,EAAEH,KAAK,CAAC;IACrE,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,YAAY,GAAG,MAAOC,MAAM,IAAK;EAC5C,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMH,KAAK,CAACY,IAAI,CAAC,GAAGX,OAAO,SAAS,EAAEU,MAAM,CAAC;IAC9D,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAC5D,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMO,YAAY,GAAG,MAAAA,CAAOJ,EAAE,EAAEE,MAAM,KAAK;EAChD,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMH,KAAK,CAACc,GAAG,CAAC,GAAGb,OAAO,WAAWQ,EAAE,EAAE,EAAEE,MAAM,CAAC;IACnE,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gDAAgDG,EAAE,GAAG,EAAEH,KAAK,CAAC;IAC3E,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMS,YAAY,GAAG,MAAON,EAAE,IAAK;EACxC,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACgB,MAAM,CAAC,GAAGf,OAAO,WAAWQ,EAAE,EAAE,CAAC;IAC9D,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+CAA+CG,EAAE,GAAG,EAAEH,KAAK,CAAC;IAC1E,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMW,iBAAiB,GAAG,MAAAA,CAAOR,EAAE,EAAES,UAAU,KAAK;EACzD,IAAI;IACF,MAAMf,QAAQ,GAAG,MAAMH,KAAK,CAACmB,KAAK,CAAC,GAAGlB,OAAO,WAAWQ,EAAE,QAAQ,EAAE;MAAEW,KAAK,EAAEF;IAAW,CAAC,CAAC;IAC1F,OAAOf,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4DAA4DG,EAAE,GAAG,EAAEH,KAAK,CAAC;IACvF,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMe,oBAAoB,GAAG,MAAOC,MAAM,IAAK;EACpD,IAAI;IACF,MAAMnB,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,qBAAqB,EAAE;MAAEsB,MAAM,EAAED;IAAO,CAAC,CAAC;IACrF,OAAOnB,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qDAAqD,EAAEA,KAAK,CAAC;IAC3E,MAAMA,KAAK;EACb;AACF,CAAC;AAED,eAAe;EACbJ,SAAS;EACTM,SAAS;EACTE,YAAY;EACZG,YAAY;EACZE,YAAY;EACZE,iBAAiB;EACjBI;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}