{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/fedelta';\n\n/**\r\n * Ottiene i dati completi del programma fedeltà\r\n */\nexport const getProgrammaFedelta = async () => {\n  try {\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    console.error('Errore nel recupero del programma fedeltà:', error);\n    throw error;\n  }\n};\n\n/**\r\n * Aggiorna il programma fedeltà\r\n * @param {Object} programmaData - Dati aggiornati del programma\r\n */\nexport const updateProgrammaFedelta = async programmaData => {\n  try {\n    const response = await axios.put(API_URL, programmaData);\n    return response.data;\n  } catch (error) {\n    console.error('Errore nell\\'aggiornamento del programma fedeltà:', error);\n    throw error;\n  }\n};\n\n/**\r\n * Aggiunge una nuova campagna\r\n * @param {Object} campagnaData - Dati della nuova campagna\r\n */\nexport const addCampagna = async campagnaData => {\n  try {\n    const response = await axios.post(`${API_URL}/campagne`, campagnaData);\n    return response.data;\n  } catch (error) {\n    console.error('Errore nell\\'aggiunta della campagna:', error);\n    throw error;\n  }\n};\n\n/**\r\n * Aggiorna una campagna esistente\r\n * @param {string} campagnaId - ID della campagna\r\n * @param {Object} campagnaData - Dati aggiornati della campagna\r\n */\nexport const updateCampagna = async (campagnaId, campagnaData) => {\n  try {\n    const response = await axios.put(`${API_URL}/campagne/${campagnaId}`, campagnaData);\n    return response.data;\n  } catch (error) {\n    console.error(`Errore nell'aggiornamento della campagna ${campagnaId}:`, error);\n    throw error;\n  }\n};\n\n/**\r\n * Elimina una campagna\r\n * @param {string} campagnaId - ID della campagna da eliminare\r\n */\nexport const deleteCampagna = async campagnaId => {\n  try {\n    const response = await axios.delete(`${API_URL}/campagne/${campagnaId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Errore nell'eliminazione della campagna ${campagnaId}:`, error);\n    throw error;\n  }\n};\n\n/**\r\n * Aggiorna le regole dei badge\r\n * @param {Array} regoleData - Array con le nuove regole dei badge\r\n */\nexport const updateRegoleBadge = async regoleData => {\n  try {\n    const response = await axios.put(`${API_URL}/regole-badge`, regoleData);\n    return response.data;\n  } catch (error) {\n    console.error('Errore nell\\'aggiornamento delle regole badge:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","getProgrammaFedelta","response","get","data","error","console","updateProgrammaFedelta","programmaData","put","addCampagna","campagnaData","post","updateCampagna","campagnaId","deleteCampagna","delete","updateRegoleBadge","regoleData"],"sources":["C:/Users/demis/Desktop/gest8-1/client/src/services/fedeltaService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/fedelta';\r\n\r\n/**\r\n * Ottiene i dati completi del programma fedeltà\r\n */\r\nexport const getProgrammaFedelta = async () => {\r\n  try {\r\n    const response = await axios.get(API_URL);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Errore nel recupero del programma fedeltà:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Aggiorna il programma fedeltà\r\n * @param {Object} programmaData - Dati aggiornati del programma\r\n */\r\nexport const updateProgrammaFedelta = async (programmaData) => {\r\n  try {\r\n    const response = await axios.put(API_URL, programmaData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Errore nell\\'aggiornamento del programma fedeltà:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Aggiunge una nuova campagna\r\n * @param {Object} campagnaData - Dati della nuova campagna\r\n */\r\nexport const addCampagna = async (campagnaData) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/campagne`, campagnaData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Errore nell\\'aggiunta della campagna:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Aggiorna una campagna esistente\r\n * @param {string} campagnaId - ID della campagna\r\n * @param {Object} campagnaData - Dati aggiornati della campagna\r\n */\r\nexport const updateCampagna = async (campagnaId, campagnaData) => {\r\n  try {\r\n    const response = await axios.put(`${API_URL}/campagne/${campagnaId}`, campagnaData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Errore nell'aggiornamento della campagna ${campagnaId}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Elimina una campagna\r\n * @param {string} campagnaId - ID della campagna da eliminare\r\n */\r\nexport const deleteCampagna = async (campagnaId) => {\r\n  try {\r\n    const response = await axios.delete(`${API_URL}/campagne/${campagnaId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Errore nell'eliminazione della campagna ${campagnaId}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Aggiorna le regole dei badge\r\n * @param {Array} regoleData - Array con le nuove regole dei badge\r\n */\r\nexport const updateRegoleBadge = async (regoleData) => {\r\n  try {\r\n    const response = await axios.put(`${API_URL}/regole-badge`, regoleData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Errore nell\\'aggiornamento delle regole badge:', error);\r\n    throw error;\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,mCAAmC;;AAEnD;AACA;AACA;AACA,OAAO,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;EAC7C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACH,OAAO,CAAC;IACzC,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;IAClE,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAME,sBAAsB,GAAG,MAAOC,aAAa,IAAK;EAC7D,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACU,GAAG,CAACT,OAAO,EAAEQ,aAAa,CAAC;IACxD,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mDAAmD,EAAEA,KAAK,CAAC;IACzE,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMK,WAAW,GAAG,MAAOC,YAAY,IAAK;EACjD,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMH,KAAK,CAACa,IAAI,CAAC,GAAGZ,OAAO,WAAW,EAAEW,YAAY,CAAC;IACtE,OAAOT,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC7D,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMQ,cAAc,GAAG,MAAAA,CAAOC,UAAU,EAAEH,YAAY,KAAK;EAChE,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMH,KAAK,CAACU,GAAG,CAAC,GAAGT,OAAO,aAAac,UAAU,EAAE,EAAEH,YAAY,CAAC;IACnF,OAAOT,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4CAA4CS,UAAU,GAAG,EAAET,KAAK,CAAC;IAC/E,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMU,cAAc,GAAG,MAAOD,UAAU,IAAK;EAClD,IAAI;IACF,MAAMZ,QAAQ,GAAG,MAAMH,KAAK,CAACiB,MAAM,CAAC,GAAGhB,OAAO,aAAac,UAAU,EAAE,CAAC;IACxE,OAAOZ,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2CAA2CS,UAAU,GAAG,EAAET,KAAK,CAAC;IAC9E,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMY,iBAAiB,GAAG,MAAOC,UAAU,IAAK;EACrD,IAAI;IACF,MAAMhB,QAAQ,GAAG,MAAMH,KAAK,CAACU,GAAG,CAAC,GAAGT,OAAO,eAAe,EAAEkB,UAAU,CAAC;IACvE,OAAOhB,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gDAAgD,EAAEA,KAAK,CAAC;IACtE,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}