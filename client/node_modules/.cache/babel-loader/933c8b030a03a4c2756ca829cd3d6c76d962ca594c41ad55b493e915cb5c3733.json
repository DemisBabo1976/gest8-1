{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\n\n// Ottiene tutti i clienti\nexport const getClienti = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/clienti`);\n    return response.data;\n  } catch (error) {\n    console.error('Errore nel recupero dei clienti:', error);\n    throw error;\n  }\n};\n\n// Ottiene un cliente specifico\nexport const getCliente = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/clienti/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Errore nel recupero del cliente con ID ${id}:`, error);\n    throw error;\n  }\n};\n\n// Crea un nuovo cliente\nexport const createCliente = async cliente => {\n  try {\n    const response = await axios.post(`${API_URL}/clienti`, cliente);\n    return response.data;\n  } catch (error) {\n    console.error('Errore nella creazione del cliente:', error);\n    throw error;\n  }\n};\n\n// Aggiorna un cliente esistente\nexport const updateCliente = async (id, cliente) => {\n  try {\n    const response = await axios.put(`${API_URL}/clienti/${id}`, cliente);\n    return response.data;\n  } catch (error) {\n    console.error(`Errore nell'aggiornamento del cliente con ID ${id}:`, error);\n    throw error;\n  }\n};\n\n// Elimina un cliente\nexport const deleteCliente = async id => {\n  try {\n    const response = await axios.delete(`${API_URL}/clienti/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Errore nell'eliminazione del cliente con ID ${id}:`, error);\n    throw error;\n  }\n};\n\n// Ricerca clienti per telefono\nexport const searchClienteByTelefono = async telefono => {\n  try {\n    const response = await axios.get(`${API_URL}/clienti/search`, {\n      params: {\n        telefono\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(`Errore nella ricerca del cliente con telefono ${telefono}:`, error);\n    throw error;\n  }\n};\n\n// Ottieni i punti cliente\nexport const getClientePunti = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/clienti/${id}/punti`);\n    return response.data;\n  } catch (error) {\n    console.error(`Errore nel recupero dei punti del cliente con ID ${id}:`, error);\n    throw error;\n  }\n};\n\n// Aggiorna i punti cliente\nexport const updateClientePunti = async (id, punti) => {\n  try {\n    const response = await axios.patch(`${API_URL}/clienti/${id}/punti`, {\n      punti\n    });\n    return response.data;\n  } catch (error) {\n    console.error(`Errore nell'aggiornamento dei punti del cliente con ID ${id}:`, error);\n    throw error;\n  }\n};\n\n// Ottieni la storia ordini di un cliente\nexport const getClienteOrdini = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/clienti/${id}/ordini`);\n    return response.data;\n  } catch (error) {\n    console.error(`Errore nel recupero degli ordini del cliente con ID ${id}:`, error);\n    throw error;\n  }\n};\nexport default {\n  getClienti,\n  getCliente,\n  createCliente,\n  updateCliente,\n  deleteCliente,\n  searchClienteByTelefono,\n  getClientePunti,\n  updateClientePunti,\n  getClienteOrdini\n};","map":{"version":3,"names":["axios","API_URL","getClienti","response","get","data","error","console","getCliente","id","createCliente","cliente","post","updateCliente","put","deleteCliente","delete","searchClienteByTelefono","telefono","params","getClientePunti","updateClientePunti","punti","patch","getClienteOrdini"],"sources":["C:/Users/demis/Desktop/gest8/client/src/services/clientiService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\n// Ottiene tutti i clienti\r\nexport const getClienti = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/clienti`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Errore nel recupero dei clienti:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Ottiene un cliente specifico\r\nexport const getCliente = async (id) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/clienti/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Errore nel recupero del cliente con ID ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Crea un nuovo cliente\r\nexport const createCliente = async (cliente) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/clienti`, cliente);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Errore nella creazione del cliente:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Aggiorna un cliente esistente\r\nexport const updateCliente = async (id, cliente) => {\r\n  try {\r\n    const response = await axios.put(`${API_URL}/clienti/${id}`, cliente);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Errore nell'aggiornamento del cliente con ID ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Elimina un cliente\r\nexport const deleteCliente = async (id) => {\r\n  try {\r\n    const response = await axios.delete(`${API_URL}/clienti/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Errore nell'eliminazione del cliente con ID ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Ricerca clienti per telefono\r\nexport const searchClienteByTelefono = async (telefono) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/clienti/search`, {\r\n      params: { telefono }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Errore nella ricerca del cliente con telefono ${telefono}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Ottieni i punti cliente\r\nexport const getClientePunti = async (id) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/clienti/${id}/punti`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Errore nel recupero dei punti del cliente con ID ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Aggiorna i punti cliente\r\nexport const updateClientePunti = async (id, punti) => {\r\n  try {\r\n    const response = await axios.patch(`${API_URL}/clienti/${id}/punti`, { punti });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Errore nell'aggiornamento dei punti del cliente con ID ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Ottieni la storia ordini di un cliente\r\nexport const getClienteOrdini = async (id) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/clienti/${id}/ordini`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Errore nel recupero degli ordini del cliente con ID ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default {\r\n  getClienti,\r\n  getCliente,\r\n  createCliente,\r\n  updateCliente,\r\n  deleteCliente,\r\n  searchClienteByTelefono,\r\n  getClientePunti,\r\n  updateClientePunti,\r\n  getClienteOrdini\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}