{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\n\n// Ottiene tutti i clienti\nexport const getClienti = async (filtri = {}) => {\n  try {\n    const response = await axios.get(`${API_URL}/clienti`, {\n      params: filtri\n    });\n    return response.data.data;\n  } catch (error) {\n    console.error('Errore nel recupero dei clienti:', error);\n    throw error;\n  }\n};\n\n// Ottiene un cliente specifico\nexport const getCliente = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/clienti/${id}`);\n    return response.data.data;\n  } catch (error) {\n    console.error(`Errore nel recupero del cliente con ID ${id}:`, error);\n    throw error;\n  }\n};\n\n// Crea un nuovo cliente\nexport const createCliente = async cliente => {\n  try {\n    const response = await axios.post(`${API_URL}/clienti`, cliente);\n    return response.data.data;\n  } catch (error) {\n    console.error('Errore nella creazione del cliente:', error);\n    throw error;\n  }\n};\n\n// Aggiorna un cliente esistente\nexport const updateCliente = async (id, cliente) => {\n  try {\n    const response = await axios.put(`${API_URL}/clienti/${id}`, cliente);\n    return response.data.data;\n  } catch (error) {\n    console.error(`Errore nell'aggiornamento del cliente con ID ${id}:`, error);\n    throw error;\n  }\n};\n\n// Elimina un cliente\nexport const deleteCliente = async id => {\n  try {\n    const response = await axios.delete(`${API_URL}/clienti/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Errore nell'eliminazione del cliente con ID ${id}:`, error);\n    throw error;\n  }\n};\n\n// Cerca clienti\nexport const searchClienti = async query => {\n  try {\n    const response = await axios.get(`${API_URL}/clienti/search`, {\n      params: {\n        q: query\n      }\n    });\n    return response.data.data;\n  } catch (error) {\n    console.error('Errore nella ricerca dei clienti:', error);\n    throw error;\n  }\n};\nexport default {\n  getClienti,\n  getCliente,\n  createCliente,\n  updateCliente,\n  deleteCliente,\n  searchClienti\n};","map":{"version":3,"names":["axios","API_URL","getClienti","filtri","response","get","params","data","error","console","getCliente","id","createCliente","cliente","post","updateCliente","put","deleteCliente","delete","searchClienti","query","q"],"sources":["C:/Users/demis/Desktop/gest8-1/client/src/services/clientiService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\n// Ottiene tutti i clienti\r\nexport const getClienti = async (filtri = {}) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/clienti`, { params: filtri });\r\n    return response.data.data;\r\n  } catch (error) {\r\n    console.error('Errore nel recupero dei clienti:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Ottiene un cliente specifico\r\nexport const getCliente = async (id) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/clienti/${id}`);\r\n    return response.data.data;\r\n  } catch (error) {\r\n    console.error(`Errore nel recupero del cliente con ID ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Crea un nuovo cliente\r\nexport const createCliente = async (cliente) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/clienti`, cliente);\r\n    return response.data.data;\r\n  } catch (error) {\r\n    console.error('Errore nella creazione del cliente:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Aggiorna un cliente esistente\r\nexport const updateCliente = async (id, cliente) => {\r\n  try {\r\n    const response = await axios.put(`${API_URL}/clienti/${id}`, cliente);\r\n    return response.data.data;\r\n  } catch (error) {\r\n    console.error(`Errore nell'aggiornamento del cliente con ID ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Elimina un cliente\r\nexport const deleteCliente = async (id) => {\r\n  try {\r\n    const response = await axios.delete(`${API_URL}/clienti/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Errore nell'eliminazione del cliente con ID ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Cerca clienti\r\nexport const searchClienti = async (query) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/clienti/search`, { params: { q: query } });\r\n    return response.data.data;\r\n  } catch (error) {\r\n    console.error('Errore nella ricerca dei clienti:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default {\r\n  getClienti,\r\n  getCliente,\r\n  createCliente,\r\n  updateCliente,\r\n  deleteCliente,\r\n  searchClienti\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}