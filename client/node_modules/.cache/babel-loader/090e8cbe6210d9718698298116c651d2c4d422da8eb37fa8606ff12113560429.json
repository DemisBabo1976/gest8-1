{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\demis\\\\Desktop\\\\gest8\\\\client\\\\src\\\\components\\\\ordini\\\\OrdiniList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Row, Col, Card, Badge, Button, Spinner } from 'react-bootstrap';\nimport { FaEye, FaEdit, FaTrash, FaArrowRight } from 'react-icons/fa';\nimport { format } from 'date-fns';\nimport { it } from 'date-fns/locale';\nimport { deleteOrdine, updateStatoOrdine } from '../../services/ordiniService';\nimport ConfirmDialog from '../common/ConfirmDialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrdiniList = ({\n  ordini,\n  loading,\n  onEditOrdine,\n  onRefresh\n}) => {\n  _s();\n  var _statoConfig$getNextS2;\n  const [deleting, setDeleting] = useState(false);\n  const [updating, setUpdating] = useState(false);\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [selectedOrdine, setSelectedOrdine] = useState(null);\n  const [action, setAction] = useState('');\n\n  // Mappatura degli stati a classi CSS e etichette\n  const statoConfig = {\n    'nuovo': {\n      class: 'status-nuovo',\n      label: 'Nuovo'\n    },\n    'in preparazione': {\n      class: 'status-in-preparazione',\n      label: 'In Preparazione'\n    },\n    'pronto': {\n      class: 'status-pronto',\n      label: 'Pronto'\n    },\n    'in consegna': {\n      class: 'status-in-consegna',\n      label: 'In Consegna'\n    },\n    'consegnato': {\n      class: 'status-consegnato',\n      label: 'Consegnato'\n    },\n    'annullato': {\n      class: 'status-annullato',\n      label: 'Annullato'\n    }\n  };\n\n  // Determina il prossimo stato in base allo stato corrente\n  const getNextStato = statoAttuale => {\n    const statoFlow = {\n      'nuovo': 'in preparazione',\n      'in preparazione': 'pronto',\n      'pronto': 'in consegna',\n      'in consegna': 'consegnato'\n    };\n    return statoFlow[statoAttuale] || null;\n  };\n\n  // Gestisce la conferma di eliminazione di un ordine\n  const handleDeleteConfirm = ordine => {\n    setSelectedOrdine(ordine);\n    setAction('delete');\n    setShowConfirm(true);\n  };\n\n  // Gestisce l'aggiornamento dello stato di un ordine\n  const handleUpdateStato = ordine => {\n    const nextStato = getNextStato(ordine.stato);\n    if (!nextStato) return;\n    setSelectedOrdine(ordine);\n    setAction('updateStato');\n    setShowConfirm(true);\n  };\n\n  // Esegue l'eliminazione di un ordine\n  const executeDelete = async () => {\n    if (!selectedOrdine) return;\n    setDeleting(true);\n    try {\n      await deleteOrdine(selectedOrdine._id);\n      onRefresh();\n    } catch (error) {\n      console.error('Errore durante l\\'eliminazione dell\\'ordine:', error);\n      // Qui si potrebbe aggiungere una notifica di errore\n    } finally {\n      setDeleting(false);\n      setShowConfirm(false);\n      setSelectedOrdine(null);\n    }\n  };\n\n  // Esegue l'aggiornamento dello stato di un ordine\n  const executeUpdateStato = async () => {\n    if (!selectedOrdine) return;\n    const nextStato = getNextStato(selectedOrdine.stato);\n    if (!nextStato) return;\n    setUpdating(true);\n    try {\n      await updateStatoOrdine(selectedOrdine._id, nextStato);\n      onRefresh();\n    } catch (error) {\n      console.error('Errore durante l\\'aggiornamento dello stato dell\\'ordine:', error);\n      // Qui si potrebbe aggiungere una notifica di errore\n    } finally {\n      setUpdating(false);\n      setShowConfirm(false);\n      setSelectedOrdine(null);\n    }\n  };\n\n  // Gestisce la conferma dell'azione\n  const handleConfirm = () => {\n    if (action === 'delete') {\n      executeDelete();\n    } else if (action === 'updateStato') {\n      executeUpdateStato();\n    }\n  };\n\n  // Formatta prezzo in EUR\n  const formatPrice = price => {\n    return new Intl.NumberFormat('it-IT', {\n      style: 'currency',\n      currency: 'EUR'\n    }).format(price);\n  };\n\n  // Formatta la data\n  const formatDate = date => {\n    return format(new Date(date), 'dd MMM yyyy, HH:mm', {\n      locale: it\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center py-5\",\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        variant: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-2\",\n        children: \"Caricamento ordini in corso...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  }\n  if (ordini.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"text-center py-5\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Nessun ordine trovato\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-muted\",\n          children: \"Non ci sono ordini che corrispondono ai criteri di ricerca.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      md: 2,\n      xl: 3,\n      className: \"g-4\",\n      children: ordini.map(ordine => {\n        var _statoConfig$ordine$s, _statoConfig$ordine$s2, _statoConfig$getNextS;\n        return /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"ordine-card h-100\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              className: \"d-flex justify-content-between align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"mb-0\",\n                  children: ordine.numeroOrdine\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                className: `status-badge ${(_statoConfig$ordine$s = statoConfig[ordine.stato]) === null || _statoConfig$ordine$s === void 0 ? void 0 : _statoConfig$ordine$s.class}`,\n                children: (_statoConfig$ordine$s2 = statoConfig[ordine.stato]) === null || _statoConfig$ordine$s2 === void 0 ? void 0 : _statoConfig$ordine$s2.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"small text-muted\",\n                  children: \"Cliente\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"fw-bold\",\n                  children: ordine.cliente ? `${ordine.cliente.nome} ${ordine.cliente.cognome}` : ordine.nomeCliente\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"small text-muted\",\n                  children: \"Dettagli\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Badge, {\n                    bg: \"light\",\n                    text: \"dark\",\n                    className: \"me-1\",\n                    children: [ordine.elementi.length, \" prodotti\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                    bg: \"light\",\n                    text: \"dark\",\n                    className: \"me-1\",\n                    children: ordine.tipo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"small text-muted\",\n                  children: \"Totale\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"h4 mb-0 text-primary\",\n                  children: formatPrice(ordine.totale)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"small text-muted mb-0\",\n                children: [\"Creato il: \", formatDate(ordine.createdAt)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n              className: \"d-flex justify-content-between align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"order-actions\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"link\",\n                  size: \"sm\",\n                  className: \"text-secondary p-0 me-2\",\n                  onClick: () => onEditOrdine(ordine),\n                  children: /*#__PURE__*/_jsxDEV(FaEye, {\n                    title: \"Visualizza\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"link\",\n                  size: \"sm\",\n                  className: \"text-primary p-0 me-2\",\n                  onClick: () => onEditOrdine(ordine),\n                  children: /*#__PURE__*/_jsxDEV(FaEdit, {\n                    title: \"Modifica\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"link\",\n                  size: \"sm\",\n                  className: \"text-danger p-0\",\n                  onClick: () => handleDeleteConfirm(ordine),\n                  disabled: deleting,\n                  children: /*#__PURE__*/_jsxDEV(FaTrash, {\n                    title: \"Elimina\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this), getNextStato(ordine.stato) && /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-success\",\n                size: \"sm\",\n                onClick: () => handleUpdateStato(ordine),\n                disabled: updating,\n                children: [`Passa a ${(_statoConfig$getNextS = statoConfig[getNextStato(ordine.stato)]) === null || _statoConfig$getNextS === void 0 ? void 0 : _statoConfig$getNextS.label}`, \" \", /*#__PURE__*/_jsxDEV(FaArrowRight, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 83\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, ordine._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n      show: showConfirm,\n      title: action === 'delete' ? 'Conferma eliminazione' : 'Conferma cambio stato',\n      message: action === 'delete' ? `Sei sicuro di voler eliminare l'ordine ${selectedOrdine === null || selectedOrdine === void 0 ? void 0 : selectedOrdine.numeroOrdine}?` : `Sei sicuro di voler cambiare lo stato dell'ordine ${selectedOrdine === null || selectedOrdine === void 0 ? void 0 : selectedOrdine.numeroOrdine} a \"${(_statoConfig$getNextS2 = statoConfig[getNextStato(selectedOrdine === null || selectedOrdine === void 0 ? void 0 : selectedOrdine.stato)]) === null || _statoConfig$getNextS2 === void 0 ? void 0 : _statoConfig$getNextS2.label}\"?`,\n      confirmVariant: action === 'delete' ? 'danger' : 'success',\n      confirmText: action === 'delete' ? 'Elimina' : 'Conferma',\n      onConfirm: handleConfirm,\n      onCancel: () => {\n        setShowConfirm(false);\n        setSelectedOrdine(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(OrdiniList, \"bLwwp0X/W+ky2DZf0hCfna6+uYM=\");\n_c = OrdiniList;\nexport default OrdiniList;\nvar _c;\n$RefreshReg$(_c, \"OrdiniList\");","map":{"version":3,"names":["React","useState","Row","Col","Card","Badge","Button","Spinner","FaEye","FaEdit","FaTrash","FaArrowRight","format","it","deleteOrdine","updateStatoOrdine","ConfirmDialog","jsxDEV","_jsxDEV","OrdiniList","ordini","loading","onEditOrdine","onRefresh","_s","_statoConfig$getNextS2","deleting","setDeleting","updating","setUpdating","showConfirm","setShowConfirm","selectedOrdine","setSelectedOrdine","action","setAction","statoConfig","class","label","getNextStato","statoAttuale","statoFlow","handleDeleteConfirm","ordine","handleUpdateStato","nextStato","stato","executeDelete","_id","error","console","executeUpdateStato","handleConfirm","formatPrice","price","Intl","NumberFormat","style","currency","formatDate","date","Date","locale","className","children","animation","variant","fileName","_jsxFileName","lineNumber","columnNumber","length","Body","xs","md","xl","map","_statoConfig$ordine$s","_statoConfig$ordine$s2","_statoConfig$getNextS","Header","numeroOrdine","cliente","nome","cognome","nomeCliente","bg","text","elementi","tipo","totale","createdAt","Footer","size","onClick","title","disabled","show","message","confirmVariant","confirmText","onConfirm","onCancel","_c","$RefreshReg$"],"sources":["C:/Users/demis/Desktop/gest8/client/src/components/ordini/OrdiniList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Row, Col, Card, Badge, Button, Spinner } from 'react-bootstrap';\r\nimport { FaEye, FaEdit, FaTrash, FaArrowRight } from 'react-icons/fa';\r\nimport { format } from 'date-fns';\r\nimport { it } from 'date-fns/locale';\r\nimport { deleteOrdine, updateStatoOrdine } from '../../services/ordiniService';\r\nimport ConfirmDialog from '../common/ConfirmDialog';\r\n\r\nconst OrdiniList = ({ ordini, loading, onEditOrdine, onRefresh }) => {\r\n  const [deleting, setDeleting] = useState(false);\r\n  const [updating, setUpdating] = useState(false);\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n  const [selectedOrdine, setSelectedOrdine] = useState(null);\r\n  const [action, setAction] = useState('');\r\n\r\n  // Mappatura degli stati a classi CSS e etichette\r\n  const statoConfig = {\r\n    'nuovo': { class: 'status-nuovo', label: 'Nuovo' },\r\n    'in preparazione': { class: 'status-in-preparazione', label: 'In Preparazione' },\r\n    'pronto': { class: 'status-pronto', label: 'Pronto' },\r\n    'in consegna': { class: 'status-in-consegna', label: 'In Consegna' },\r\n    'consegnato': { class: 'status-consegnato', label: 'Consegnato' },\r\n    'annullato': { class: 'status-annullato', label: 'Annullato' }\r\n  };\r\n\r\n  // Determina il prossimo stato in base allo stato corrente\r\n  const getNextStato = (statoAttuale) => {\r\n    const statoFlow = {\r\n      'nuovo': 'in preparazione',\r\n      'in preparazione': 'pronto',\r\n      'pronto': 'in consegna',\r\n      'in consegna': 'consegnato'\r\n    };\r\n    return statoFlow[statoAttuale] || null;\r\n  };\r\n\r\n  // Gestisce la conferma di eliminazione di un ordine\r\n  const handleDeleteConfirm = (ordine) => {\r\n    setSelectedOrdine(ordine);\r\n    setAction('delete');\r\n    setShowConfirm(true);\r\n  };\r\n\r\n  // Gestisce l'aggiornamento dello stato di un ordine\r\n  const handleUpdateStato = (ordine) => {\r\n    const nextStato = getNextStato(ordine.stato);\r\n    if (!nextStato) return;\r\n\r\n    setSelectedOrdine(ordine);\r\n    setAction('updateStato');\r\n    setShowConfirm(true);\r\n  };\r\n\r\n  // Esegue l'eliminazione di un ordine\r\n  const executeDelete = async () => {\r\n    if (!selectedOrdine) return;\r\n    \r\n    setDeleting(true);\r\n    try {\r\n      await deleteOrdine(selectedOrdine._id);\r\n      onRefresh();\r\n    } catch (error) {\r\n      console.error('Errore durante l\\'eliminazione dell\\'ordine:', error);\r\n      // Qui si potrebbe aggiungere una notifica di errore\r\n    } finally {\r\n      setDeleting(false);\r\n      setShowConfirm(false);\r\n      setSelectedOrdine(null);\r\n    }\r\n  };\r\n\r\n  // Esegue l'aggiornamento dello stato di un ordine\r\n  const executeUpdateStato = async () => {\r\n    if (!selectedOrdine) return;\r\n    \r\n    const nextStato = getNextStato(selectedOrdine.stato);\r\n    if (!nextStato) return;\r\n    \r\n    setUpdating(true);\r\n    try {\r\n      await updateStatoOrdine(selectedOrdine._id, nextStato);\r\n      onRefresh();\r\n    } catch (error) {\r\n      console.error('Errore durante l\\'aggiornamento dello stato dell\\'ordine:', error);\r\n      // Qui si potrebbe aggiungere una notifica di errore\r\n    } finally {\r\n      setUpdating(false);\r\n      setShowConfirm(false);\r\n      setSelectedOrdine(null);\r\n    }\r\n  };\r\n\r\n  // Gestisce la conferma dell'azione\r\n  const handleConfirm = () => {\r\n    if (action === 'delete') {\r\n      executeDelete();\r\n    } else if (action === 'updateStato') {\r\n      executeUpdateStato();\r\n    }\r\n  };\r\n\r\n  // Formatta prezzo in EUR\r\n  const formatPrice = (price) => {\r\n    return new Intl.NumberFormat('it-IT', { style: 'currency', currency: 'EUR' }).format(price);\r\n  };\r\n\r\n  // Formatta la data\r\n  const formatDate = (date) => {\r\n    return format(new Date(date), 'dd MMM yyyy, HH:mm', { locale: it });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"text-center py-5\">\r\n        <Spinner animation=\"border\" variant=\"primary\" />\r\n        <p className=\"mt-2\">Caricamento ordini in corso...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (ordini.length === 0) {\r\n    return (\r\n      <Card className=\"text-center py-5\">\r\n        <Card.Body>\r\n          <h4>Nessun ordine trovato</h4>\r\n          <p className=\"text-muted\">Non ci sono ordini che corrispondono ai criteri di ricerca.</p>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Row xs={1} md={2} xl={3} className=\"g-4\">\r\n        {ordini.map((ordine) => (\r\n          <Col key={ordine._id}>\r\n            <Card className=\"ordine-card h-100\">\r\n              <Card.Header className=\"d-flex justify-content-between align-items-center\">\r\n                <div>\r\n                  <h5 className=\"mb-0\">{ordine.numeroOrdine}</h5>\r\n                </div>\r\n                <Badge className={`status-badge ${statoConfig[ordine.stato]?.class}`}>\r\n                  {statoConfig[ordine.stato]?.label}\r\n                </Badge>\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <div className=\"mb-3\">\r\n                  <div className=\"small text-muted\">Cliente</div>\r\n                  <div className=\"fw-bold\">{ordine.cliente ? `${ordine.cliente.nome} ${ordine.cliente.cognome}` : ordine.nomeCliente}</div>\r\n                </div>\r\n                \r\n                <div className=\"mb-3\">\r\n                  <div className=\"small text-muted\">Dettagli</div>\r\n                  <div>\r\n                    <Badge bg=\"light\" text=\"dark\" className=\"me-1\">\r\n                      {ordine.elementi.length} prodotti\r\n                    </Badge>\r\n                    <Badge bg=\"light\" text=\"dark\" className=\"me-1\">\r\n                      {ordine.tipo}\r\n                    </Badge>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"mb-3\">\r\n                  <div className=\"small text-muted\">Totale</div>\r\n                  <div className=\"h4 mb-0 text-primary\">{formatPrice(ordine.totale)}</div>\r\n                </div>\r\n                \r\n                <div className=\"small text-muted mb-0\">\r\n                  Creato il: {formatDate(ordine.createdAt)}\r\n                </div>\r\n              </Card.Body>\r\n              <Card.Footer className=\"d-flex justify-content-between align-items-center\">\r\n                <div className=\"order-actions\">\r\n                  <Button \r\n                    variant=\"link\" \r\n                    size=\"sm\" \r\n                    className=\"text-secondary p-0 me-2\"\r\n                    onClick={() => onEditOrdine(ordine)}\r\n                  >\r\n                    <FaEye title=\"Visualizza\" />\r\n                  </Button>\r\n                  <Button \r\n                    variant=\"link\" \r\n                    size=\"sm\" \r\n                    className=\"text-primary p-0 me-2\"\r\n                    onClick={() => onEditOrdine(ordine)}\r\n                  >\r\n                    <FaEdit title=\"Modifica\" />\r\n                  </Button>\r\n                  <Button \r\n                    variant=\"link\" \r\n                    size=\"sm\" \r\n                    className=\"text-danger p-0\"\r\n                    onClick={() => handleDeleteConfirm(ordine)}\r\n                    disabled={deleting}\r\n                  >\r\n                    <FaTrash title=\"Elimina\" />\r\n                  </Button>\r\n                </div>\r\n                \r\n                {getNextStato(ordine.stato) && (\r\n                  <Button\r\n                    variant=\"outline-success\"\r\n                    size=\"sm\"\r\n                    onClick={() => handleUpdateStato(ordine)}\r\n                    disabled={updating}\r\n                  >\r\n                    {`Passa a ${statoConfig[getNextStato(ordine.stato)]?.label}`} <FaArrowRight />\r\n                  </Button>\r\n                )}\r\n              </Card.Footer>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n\r\n      <ConfirmDialog\r\n        show={showConfirm}\r\n        title={action === 'delete' ? 'Conferma eliminazione' : 'Conferma cambio stato'}\r\n        message={\r\n          action === 'delete'\r\n            ? `Sei sicuro di voler eliminare l'ordine ${selectedOrdine?.numeroOrdine}?`\r\n            : `Sei sicuro di voler cambiare lo stato dell'ordine ${selectedOrdine?.numeroOrdine} a \"${statoConfig[getNextStato(selectedOrdine?.stato)]?.label}\"?`\r\n        }\r\n        confirmVariant={action === 'delete' ? 'danger' : 'success'}\r\n        confirmText={action === 'delete' ? 'Elimina' : 'Conferma'}\r\n        onConfirm={handleConfirm}\r\n        onCancel={() => {\r\n          setShowConfirm(false);\r\n          setSelectedOrdine(null);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrdiniList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}