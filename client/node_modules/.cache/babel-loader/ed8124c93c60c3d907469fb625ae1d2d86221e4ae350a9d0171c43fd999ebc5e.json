{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\demis\\\\Desktop\\\\gest8\\\\client\\\\src\\\\services\\\\clientiService.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getClienti, createCliente } from '../services/clientiService';\nimport { createOrdine } from '../services/ordiniService1';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DettaglioOrdine = ({\n  onClose\n}) => {\n  _s();\n  const [clienti, setClienti] = useState([]);\n  const [clienteSelezionato, setClienteSelezionato] = useState(null);\n  const [nuovoCliente, setNuovoCliente] = useState({\n    nome: '',\n    telefono: ''\n  });\n\n  // Carica i clienti all'avvio del componente\n  useEffect(() => {\n    const fetchClienti = async () => {\n      try {\n        const response = await getClienti();\n        setClienti(response);\n      } catch (error) {\n        console.error('Errore nel caricare i clienti', error);\n      }\n    };\n    fetchClienti();\n  }, []);\n\n  // Gestisci la selezione di un cliente esistente\n  const handleClienteSelezionato = e => {\n    const clienteId = e.target.value;\n    const cliente = clienti.find(c => c._id === clienteId);\n    setClienteSelezionato(cliente);\n  };\n\n  // Gestisci la creazione di un nuovo cliente\n  const handleNuovoCliente = async () => {\n    try {\n      const cliente = await createCliente(nuovoCliente);\n      setClienti([...clienti, cliente.data]);\n      setClienteSelezionato(cliente.data);\n      // Resetta il form nuovo cliente\n      setNuovoCliente({\n        nome: '',\n        telefono: ''\n      });\n    } catch (error) {\n      console.error('Errore nella creazione del cliente', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: (clienteSelezionato === null || clienteSelezionato === void 0 ? void 0 : clienteSelezionato._id) || '',\n      onChange: handleClienteSelezionato,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Seleziona un cliente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), clienti.map(cliente => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: cliente._id,\n        children: [cliente.nome, \" - \", cliente.telefono]\n      }, cliente._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nome\",\n        value: nuovoCliente.nome,\n        onChange: e => setNuovoCliente({\n          ...nuovoCliente,\n          nome: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        placeholder: \"Telefono\",\n        value: nuovoCliente.telefono,\n        onChange: e => setNuovoCliente({\n          ...nuovoCliente,\n          telefono: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNuovoCliente,\n        children: \"Nuovo Cliente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(DettaglioOrdine, \"MJ2QnDCuwY8UW1WnpkZjwGoh9/8=\");\n_c = DettaglioOrdine;\nexport default DettaglioOrdine;\nvar _c;\n$RefreshReg$(_c, \"DettaglioOrdine\");","map":{"version":3,"names":["React","useState","useEffect","getClienti","createCliente","createOrdine","jsxDEV","_jsxDEV","DettaglioOrdine","onClose","_s","clienti","setClienti","clienteSelezionato","setClienteSelezionato","nuovoCliente","setNuovoCliente","nome","telefono","fetchClienti","response","error","console","handleClienteSelezionato","e","clienteId","target","value","cliente","find","c","_id","handleNuovoCliente","data","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/demis/Desktop/gest8/client/src/services/clientiService.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getClienti, createCliente } from '../services/clientiService';\r\nimport { createOrdine } from '../services/ordiniService1';\r\n\r\nconst DettaglioOrdine = ({ onClose }) => {\r\n  const [clienti, setClienti] = useState([]);\r\n  const [clienteSelezionato, setClienteSelezionato] = useState(null);\r\n  const [nuovoCliente, setNuovoCliente] = useState({\r\n    nome: '',\r\n    telefono: ''\r\n  });\r\n\r\n  // Carica i clienti all'avvio del componente\r\n  useEffect(() => {\r\n    const fetchClienti = async () => {\r\n      try {\r\n        const response = await getClienti();\r\n        setClienti(response);\r\n      } catch (error) {\r\n        console.error('Errore nel caricare i clienti', error);\r\n      }\r\n    };\r\n\r\n    fetchClienti();\r\n  }, []);\r\n\r\n  // Gestisci la selezione di un cliente esistente\r\n  const handleClienteSelezionato = (e) => {\r\n    const clienteId = e.target.value;\r\n    const cliente = clienti.find(c => c._id === clienteId);\r\n    setClienteSelezionato(cliente);\r\n  };\r\n\r\n  // Gestisci la creazione di un nuovo cliente\r\n  const handleNuovoCliente = async () => {\r\n    try {\r\n      const cliente = await createCliente(nuovoCliente);\r\n      setClienti([...clienti, cliente.data]);\r\n      setClienteSelezionato(cliente.data);\r\n      // Resetta il form nuovo cliente\r\n      setNuovoCliente({ nome: '', telefono: '' });\r\n    } catch (error) {\r\n      console.error('Errore nella creazione del cliente', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Selezione cliente esistente */}\r\n      <select \r\n        value={clienteSelezionato?._id || ''} \r\n        onChange={handleClienteSelezionato}\r\n      >\r\n        <option value=\"\">Seleziona un cliente</option>\r\n        {clienti.map(cliente => (\r\n          <option key={cliente._id} value={cliente._id}>\r\n            {cliente.nome} - {cliente.telefono}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      {/* Form per nuovo cliente */}\r\n      <div>\r\n        <input \r\n          type=\"text\"\r\n          placeholder=\"Nome\"\r\n          value={nuovoCliente.nome}\r\n          onChange={(e) => setNuovoCliente({...nuovoCliente, nome: e.target.value})}\r\n        />\r\n        <input \r\n          type=\"tel\"\r\n          placeholder=\"Telefono\"\r\n          value={nuovoCliente.telefono}\r\n          onChange={(e) => setNuovoCliente({...nuovoCliente, telefono: e.target.value})}\r\n        />\r\n        <button onClick={handleNuovoCliente}>\r\n          Nuovo Cliente\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DettaglioOrdine;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}