{"ast":null,"code":"const fetchConfigurazioni = async () => {\n  setIsLoading(true);\n  setError(null);\n  try {\n    // Prova a ottenere i dati dall'API\n    const response = await axios.get('/api/ordini/configurazione', {\n      timeout: 5000,\n      validateStatus: function (status) {\n        return status < 500;\n      }\n    });\n    if (response.data && response.data.data) {\n      setConfigurazioni(response.data.data);\n      // Salva anche in localStorage per il futuro\n      localStorage.setItem('configurazioni-orari', JSON.stringify(response.data.data));\n    } else {\n      throw new Error('Dati non validi dalla risposta API');\n    }\n  } catch (err) {\n    console.error('Errore nel caricamento delle configurazioni:', err);\n\n    // Prova a caricare dal localStorage\n    const localData = localStorage.getItem('configurazioni-orari');\n    if (localData) {\n      try {\n        const parsedData = JSON.parse(localData);\n        setConfigurazioni(parsedData);\n        setError('Caricati dati locali (server non disponibile)');\n      } catch (parseError) {\n        console.error('Errore nel parsing dei dati locali:', parseError);\n        createDefaultConfigurations();\n      }\n    } else {\n      createDefaultConfigurations();\n    }\n  } finally {\n    setIsLoading(false);\n  }\n};\n\n// Funzione helper per creare configurazioni predefinite\nconst createDefaultConfigurations = () => {\n  const configurazioniPredefinite = Array(7).fill(0).map((_, index) => ({\n    id: index,\n    giorno: index,\n    nomeGiorno: giorniSettimana[index],\n    aperto: index === 1,\n    // Solo Martedì aperto per default (come nell'immagine)\n    intervalloSlot: 10,\n    capacitaSlot: 5,\n    turni: index === 1 ? [{\n      apertura: '12:00',\n      chiusura: '14:30'\n    }, {\n      apertura: '18:00',\n      chiusura: '23:00'\n    }] : []\n  }));\n  setConfigurazioni(configurazioniPredefinite);\n  setError('Utilizzati dati predefiniti.');\n\n  // Salva anche in localStorage per il futuro\n  localStorage.setItem('configurazioni-orari', JSON.stringify(configurazioniPredefinite));\n};","map":{"version":3,"names":["fetchConfigurazioni","setIsLoading","setError","response","axios","get","timeout","validateStatus","status","data","setConfigurazioni","localStorage","setItem","JSON","stringify","Error","err","console","error","localData","getItem","parsedData","parse","parseError","createDefaultConfigurations","configurazioniPredefinite","Array","fill","map","_","index","id","giorno","nomeGiorno","giorniSettimana","aperto","intervalloSlot","capacitaSlot","turni","apertura","chiusura"],"sources":["C:/Users/demis/Desktop/gest8-1/client/src/components/ordini/ConfigurazioneOrari.jsx"],"sourcesContent":["const fetchConfigurazioni = async () => {\r\n  setIsLoading(true);\r\n  setError(null);\r\n  \r\n  try {\r\n    // Prova a ottenere i dati dall'API\r\n    const response = await axios.get('/api/ordini/configurazione', { \r\n      timeout: 5000,\r\n      validateStatus: function (status) {\r\n        return status < 500;\r\n      }\r\n    });\r\n    \r\n    if (response.data && response.data.data) {\r\n      setConfigurazioni(response.data.data);\r\n      // Salva anche in localStorage per il futuro\r\n      localStorage.setItem('configurazioni-orari', JSON.stringify(response.data.data));\r\n    } else {\r\n      throw new Error('Dati non validi dalla risposta API');\r\n    }\r\n  } catch (err) {\r\n    console.error('Errore nel caricamento delle configurazioni:', err);\r\n    \r\n    // Prova a caricare dal localStorage\r\n    const localData = localStorage.getItem('configurazioni-orari');\r\n    \r\n    if (localData) {\r\n      try {\r\n        const parsedData = JSON.parse(localData);\r\n        setConfigurazioni(parsedData);\r\n        setError('Caricati dati locali (server non disponibile)');\r\n      } catch (parseError) {\r\n        console.error('Errore nel parsing dei dati locali:', parseError);\r\n        createDefaultConfigurations();\r\n      }\r\n    } else {\r\n      createDefaultConfigurations();\r\n    }\r\n  } finally {\r\n    setIsLoading(false);\r\n  }\r\n};\r\n\r\n// Funzione helper per creare configurazioni predefinite\r\nconst createDefaultConfigurations = () => {\r\n  const configurazioniPredefinite = Array(7).fill(0).map((_, index) => ({\r\n    id: index,\r\n    giorno: index,\r\n    nomeGiorno: giorniSettimana[index],\r\n    aperto: index === 1, // Solo Martedì aperto per default (come nell'immagine)\r\n    intervalloSlot: 10,\r\n    capacitaSlot: 5,\r\n    turni: index === 1 ? [\r\n      { apertura: '12:00', chiusura: '14:30' },\r\n      { apertura: '18:00', chiusura: '23:00' }\r\n    ] : []\r\n  }));\r\n  \r\n  setConfigurazioni(configurazioniPredefinite);\r\n  setError('Utilizzati dati predefiniti.');\r\n  \r\n  // Salva anche in localStorage per il futuro\r\n  localStorage.setItem('configurazioni-orari', JSON.stringify(configurazioniPredefinite));\r\n};"],"mappings":"AAAA,MAAMA,mBAAmB,GAAG,MAAAA,CAAA,KAAY;EACtCC,YAAY,CAAC,IAAI,CAAC;EAClBC,QAAQ,CAAC,IAAI,CAAC;EAEd,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC,4BAA4B,EAAE;MAC7DC,OAAO,EAAE,IAAI;MACbC,cAAc,EAAE,SAAAA,CAAUC,MAAM,EAAE;QAChC,OAAOA,MAAM,GAAG,GAAG;MACrB;IACF,CAAC,CAAC;IAEF,IAAIL,QAAQ,CAACM,IAAI,IAAIN,QAAQ,CAACM,IAAI,CAACA,IAAI,EAAE;MACvCC,iBAAiB,CAACP,QAAQ,CAACM,IAAI,CAACA,IAAI,CAAC;MACrC;MACAE,YAAY,CAACC,OAAO,CAAC,sBAAsB,EAAEC,IAAI,CAACC,SAAS,CAACX,QAAQ,CAACM,IAAI,CAACA,IAAI,CAAC,CAAC;IAClF,CAAC,MAAM;MACL,MAAM,IAAIM,KAAK,CAAC,oCAAoC,CAAC;IACvD;EACF,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,8CAA8C,EAAEF,GAAG,CAAC;;IAElE;IACA,MAAMG,SAAS,GAAGR,YAAY,CAACS,OAAO,CAAC,sBAAsB,CAAC;IAE9D,IAAID,SAAS,EAAE;MACb,IAAI;QACF,MAAME,UAAU,GAAGR,IAAI,CAACS,KAAK,CAACH,SAAS,CAAC;QACxCT,iBAAiB,CAACW,UAAU,CAAC;QAC7BnB,QAAQ,CAAC,+CAA+C,CAAC;MAC3D,CAAC,CAAC,OAAOqB,UAAU,EAAE;QACnBN,OAAO,CAACC,KAAK,CAAC,qCAAqC,EAAEK,UAAU,CAAC;QAChEC,2BAA2B,CAAC,CAAC;MAC/B;IACF,CAAC,MAAM;MACLA,2BAA2B,CAAC,CAAC;IAC/B;EACF,CAAC,SAAS;IACRvB,YAAY,CAAC,KAAK,CAAC;EACrB;AACF,CAAC;;AAED;AACA,MAAMuB,2BAA2B,GAAGA,CAAA,KAAM;EACxC,MAAMC,yBAAyB,GAAGC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,MAAM;IACpEC,EAAE,EAAED,KAAK;IACTE,MAAM,EAAEF,KAAK;IACbG,UAAU,EAAEC,eAAe,CAACJ,KAAK,CAAC;IAClCK,MAAM,EAAEL,KAAK,KAAK,CAAC;IAAE;IACrBM,cAAc,EAAE,EAAE;IAClBC,YAAY,EAAE,CAAC;IACfC,KAAK,EAAER,KAAK,KAAK,CAAC,GAAG,CACnB;MAAES,QAAQ,EAAE,OAAO;MAAEC,QAAQ,EAAE;IAAQ,CAAC,EACxC;MAAED,QAAQ,EAAE,OAAO;MAAEC,QAAQ,EAAE;IAAQ,CAAC,CACzC,GAAG;EACN,CAAC,CAAC,CAAC;EAEH9B,iBAAiB,CAACe,yBAAyB,CAAC;EAC5CvB,QAAQ,CAAC,8BAA8B,CAAC;;EAExC;EACAS,YAAY,CAACC,OAAO,CAAC,sBAAsB,EAAEC,IAAI,CAACC,SAAS,CAACW,yBAAyB,CAAC,CAAC;AACzF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}